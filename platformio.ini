; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:default]
platform = ststm32
board = genericSTM32F103CB
framework = stm32cube
; add "Custom" -> "SWO Viewer" project task
extra_scripts = pre:add_swo_viewer.py
; set SWO trace clock in frequency to configured HCLK frequency
; in this example, board is clocked via HSI to 64MHz.
; if this number is wrong, there will be no output.
swo_trace_clkin_freq = 64000000
; if you want to see SWO outputs during debugging, a custom
; debug server invocation must be used.
; adapt interface and target accordingly.
; this entails changing the traceclk parameter to match
; the swo_trace_clkin_freq above.
; the SWO pin frequency param is irrelevant, since we are forwarding to
; tcl_trace, but OpenOCD will otherwise fail to enable the TPIU.
; this is used when starting debugging, not in the SWO Viewer task.
; after debugging starts, one must manually start the swo_viewer.py with
; python swo_parser.py --dont-run
debug_server = $PLATFORMIO_CORE_DIR/packages/tool-openocd/bin/openocd
  -f $PLATFORMIO_CORE_DIR/packages/tool-openocd/scripts/interface/stlink.cfg
  -f $PLATFORMIO_CORE_DIR/packages/tool-openocd/scripts/target/stm32f1x.cfg
  -c "tpiu create nucleo_f103rb.tpiu -dap nucleo_f103rb.dap -ap-num 0"
  -c "nucleo_f103rb.tpiu configure -protocol uart"
  -c "nucleo_f103rb.tpiu configure -output -"
  -c "nucleo_f103rb.tpiu configure -traceclk 64000000"
  -c "nucleo_f103rb.tpiu configure -pin-freq 2000000"
  -c "nucleo_f103rb.tpiu configure -formatter 0"
  -c "itm ports on"
  -c "nucleo_f103rb.tpiu enable"
  -c "tcl_port 6666"
upload_protocol = stlink
debug_tool = stlink

